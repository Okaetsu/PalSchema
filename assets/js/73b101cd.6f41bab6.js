"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[662],{6106:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"types/softclassptr","title":"TSoftClassPtr","description":"TSoftClassPtr Properties in Pal Schema are defined as strings that point to an asset path. They\'re basically the same as TSoftObjectPtr, except they must end with a _C.","source":"@site/docs/types/softclassptr.md","sourceDirName":"types","slug":"/types/softclassptr","permalink":"/PalSchema/docs/types/softclassptr","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":11,"frontMatter":{"sidebar_position":11},"sidebar":"documentationSidebar","previous":{"title":"TSoftObjectPtr","permalink":"/PalSchema/docs/types/softobjectptr"},"next":{"title":"Guides","permalink":"/PalSchema/docs/category/guides"}}');var a=s(4848),r=s(8453);const o={sidebar_position:11},i="TSoftClassPtr",l={},c=[{value:"Example",id:"example",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"tsoftclassptr",children:"TSoftClassPtr"})}),"\n",(0,a.jsxs)(t.p,{children:["TSoftClassPtr Properties in Pal Schema are defined as strings that point to an asset path. They're basically the same as ",(0,a.jsx)(t.a,{href:"/PalSchema/docs/types/softobjectptr",children:"TSoftObjectPtr"}),", except they must end with a ",(0,a.jsx)(t.code,{children:"_C"}),"."]}),"\n",(0,a.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(t.p,{children:(0,a.jsx)(t.code,{children:"Pal/Content/Pal/DataTable/Character/DT_PalBPClass.uasset"})}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"BPClass"})," in ",(0,a.jsx)(t.code,{children:"DT_PalBPClass"})," is a TSoftClassPtr property. You can tell from the long path that looks something like this: ",(0,a.jsx)(t.code,{children:"/Game/Pal/Blueprint/Character/Monster/PalActorBP/Anubis/BP_Anubis.BP_Anubis_C"}),". Notice how the path ends in a ",(0,a.jsx)(t.code,{children:"_C"}),"? This basically tells Unreal that we want a soft pointer to a Class rather than an Object."]}),"\n",(0,a.jsxs)(t.p,{children:["In FModel the above path would translate to ",(0,a.jsx)(t.code,{children:"Pal/Content/Pal/Blueprint/Character/Monster/PalActorBP/Anubis/BP_Anubis.BP_Anubis_C"}),"."]}),"\n",(0,a.jsxs)(t.p,{children:["In Pal Schema you want to convert the beginning ",(0,a.jsx)(t.code,{children:"Pal/Content"})," into ",(0,a.jsx)(t.code,{children:"/Game/"}),". Make sure it has a forward slash in the beginning, otherwise your path will not be read correctly, so don't do something like this: ",(0,a.jsx)(t.code,{children:"Game/etc"}),". Remember to always end your path in ",(0,a.jsx)(t.code,{children:"_C"})," when dealing with TSoftClassPtr properties."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-json",children:'{\n    "DT_PalBPClass": {\n        "Anubis": {\n            "BPClass": "/Game/Pal/Blueprint/Character/Monster/PalActorBP/PinkCat/BP_PinkCat.BP_PinkCat_C"\n        }\n    }\n}\n'})}),"\n",(0,a.jsx)(t.p,{children:"As you can see, we just use a string right after BPClass, rather than the complex object that can be seen in FModel."})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>i});var n=s(6540);const a={},r=n.createContext(a);function o(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);